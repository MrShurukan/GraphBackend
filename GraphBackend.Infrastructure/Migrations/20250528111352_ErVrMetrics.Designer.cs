// <auto-generated />
using System;
using GraphBackend.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace GraphBackend.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20250528111352_ErVrMetrics")]
    partial class ErVrMetrics
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GraphBackend.Domain.Models.HeroRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AuthorName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("author_name");

                    b.Property<int>("Classification")
                        .HasColumnType("integer")
                        .HasColumnName("classification");

                    b.Property<string>("CommentUrl")
                        .HasColumnType("text")
                        .HasColumnName("comment_url");

                    b.Property<int>("Comments")
                        .HasColumnType("integer")
                        .HasColumnName("comments");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_time");

                    b.Property<float>("ER")
                        .HasColumnType("real")
                        .HasColumnName("er");

                    b.Property<int>("Likes")
                        .HasColumnType("integer")
                        .HasColumnName("likes");

                    b.Property<string>("PostAuthor")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("post_author");

                    b.Property<int>("Reposts")
                        .HasColumnType("integer")
                        .HasColumnName("reposts");

                    b.Property<int>("Subscribers")
                        .HasColumnType("integer")
                        .HasColumnName("subscribers");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("text");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("url");

                    b.Property<string>("UrlWithOwner")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("url_with_owner");

                    b.Property<float>("VR")
                        .HasColumnType("real")
                        .HasColumnName("vr");

                    b.Property<int>("Views")
                        .HasColumnType("integer")
                        .HasColumnName("views");

                    b.Property<string>("WallOwner")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("wall_owner");

                    b.HasKey("Id")
                        .HasName("pk_hero_records");

                    b.HasIndex("Url")
                        .IsUnique()
                        .HasDatabaseName("ix_hero_records_url");

                    b.ToTable("hero_records", (string)null);
                });

            modelBuilder.Entity("GraphBackend.Domain.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("password_hash");

                    b.Property<int>("Role")
                        .HasColumnType("integer")
                        .HasColumnName("role");

                    b.HasKey("Id")
                        .HasName("pk_users");

                    b.ToTable("users", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
